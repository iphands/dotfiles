#!/bin/bash
set -eo pipefail
CACHE=/tmp/wrl-randr.facts.cache
wlr-randr | grep '^[a-zA-Z]' > "$CACHE"
DISP_COUNT=$(wc -l "$CACHE" | awk '{print $1}')

MODES="above|work|same|right|home|single"

MAIN=eDP-1
MON_HOME=HDMI-A-1
MON_WORK_ONE_ID=73GTT81Q441L
MON_WORK_TWO_ID=73GTT69MA1DL
MON_HOME_ID=Sony

_check() {
  if [[ $1 == "" ]]
  then
    echo "assertion failed: empty option found"
    exit 1
  fi
}

_fail_no_mode() {
  echo "Error: must supply a mode as arg1 <$MODES>"
  exit 1
}

_fail_bad_mode() {
  echo "Error: invalid mode $1 (expected <$MODES>)"
  exit 1
}

_do_auto() {
  [[ "$DISP_COUNT" == "3" ]] && _main "work" "from_auto" && exit 0
  [[ "$DISP_COUNT" == "2" ]] && _main "above" "from_auto" && exit 0
  [[ "$DISP_COUNT" == "1" ]] && _main "single" "from_auto" && exit 0
}

_do_work() {
  [[ "$DISP_COUNT" != "3" ]] && return 1
  echo "# Found three monitors, looking for monitors"
  echo "- Looking for MON_WORK_ONE_ID: $(grep $MON_WORK_ONE_ID $CACHE)"
  echo "- Looking for MON_WORK_TWO_ID: $(grep $MON_WORK_TWO_ID $CACHE)"

  MON_WORK_ONE=$(grep "$MON_WORK_ONE_ID" "$CACHE" | cut -d' ' -f1)
  MON_WORK_TWO=$(grep "$MON_WORK_TWO_ID" "$CACHE" | cut -d' ' -f1)

  echo "## Found both doing work desk setup"
  wlr-randr --output "$MAIN" --pos 0,0
  wlr-randr --output "$MON_WORK_ONE" --above "$MAIN"
  wlr-randr --output "$MON_WORK_TWO" --right-of "$MON_WORK_ONE"
  wlr-randr --output "$MAIN" --pos 0,0
  return 0
}

_main() {
  MODE=$1
  [[ "$MODE" == "" ]] && _fail_no_mode
  [[ "$2" == "from_auto" ]] && echo "Auto detected mode \"$MODE\""

  set +e
  OTHEr=$(grep '^[a-zA-Z]' "$CACHE" | grep -v eDP-1 | head -n1 | awk '{print $1}')
  set -e

  case $MODE in
  "above" | "work")
    _do_work || {
      _check $OTHER
      xrandr --output $OTHER --above $MAIN
    }
    ;;
  "same" | "same-as")
    _check $OTHER
    xrandr --output $OTHER --same-as $MAIN
    ;;
  "home")
    OTHER=$(grep $MON_HOME_ID $CACHE | cut -d' ' -f1)
    wlr-randr --output $MON_HOME --right-of $MAIN --pos 1920,-1300
    wlr-randr --output $MAIN --pos 0,0
    ;;
  "single")
    wlr-randr --output $MAIN --pos 0,0
    ;;

  *) _fail_bad_mode $MODE
  esac
}

[[ "$1" == "" ]] && _do_auto $1
_main $1
